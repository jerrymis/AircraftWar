@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # locationX:int
    # locationY:int
    # speedX:int
    # speedY:int
    # image:BufferedImage
    # width:int
    # height:int
    # isValid:boolean

    + FlyingObject(int locationX, int locationY, int speedX, int speedY):void
    + forward():void
    + crash(FlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# axHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp):void
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<Bullet>
 }

abstract class AbstractBullet
{
    - power:int
    + Bullet(int locationX, int locationY, int speedX, int speedY, int power):void
    + forward():void
	+ getPower():int
}


AbstractBullet <|-- HeroBullet
AbstractBullet <|-- EnemyBullet

AbstractFlyingObject <|- AbstractAircraft
AbstractFlyingObject <|- AbstractBullet
AbstractFlyingObject <|- AbstractProp

AbstractAircraft <|- HeroAircraft
AbstractAircraft <|- MobEnemy
AbstractAircraft <|- EliteEnemy
AbstractAircraft <|- BossEnemy

AbstractBullet <|- EnemyBullet
AbstractBullet <|- HeroBullet

AbstractProp <|- HpProp
AbstractProp <|- FireProp
AbstractProp <|- BombProp



class HeroAircraft {
    - shootNum:int
    - power:int
    - direction:int
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<Bullet>
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
    + forward():void
    + shoot():List<Bullet>
}
class EliteEnemy{
  + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
  + forward():void
  + shoot():List<Bullet>
}
class BossEnemy{
  + BossEnemy(int locationX, int locationY, int speedX, int speedY, int hp):void
  + forward():void
  + shoot():List<Bullet>
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power):void
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power):void
}
class HpProp{
  +HpProp(int locationX, int locationY, int speedX, int speedY)
  +void forward()
  +void work(AbstractAircraft aircraft)
}

class FireProp{
  +FireProp(int locationX, int locationY, int speedX, int speedY):void
  +void forward()
  +void work(AbstractAircraft aircraft)
}

class BombProp{
  +BombProp(int locationX, int locationY, int speedX, int speedY):void
  +void forward()
  +void work(AbstractAircraft aircraft)
}

abstract AbstractProp{
    +AbstractProp(int locationX, int locationY, int speedX, int speedY):void
    +abstract void work(AbstractAircraft aircraft)
}
@enduml